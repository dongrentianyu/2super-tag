title: language/zh-Hans/WidgetExamples

!! 通用 JSON 表单编辑器微件的使用

我们还提供了一个小工具，可以根据一个过滤器渲染一个表单，其输出是一个JSON Schema的列表：

`<$json-editor-form filter="[all[current]tags[]tags[]] :filter[tags[]match[$:/SuperTag/TraitTag]] :and[get[schema]] " tiddler=<<currentTiddler>> />`

上述小组件的用法将产生与`<$supertag-form />`完全相同的输出，正如[[talk论坛帖子|https://talk.tiddlywiki.org/t/supertag-plugin-auto-generate-a-field-editor-on-view-template/6245/2?u=linonetwo]]中建议的那样。

下面是一些更多的例子：

!!! 根据当前条目的模式字段来渲染一个表单

`tiddler`参数默认为`<<currentTiddler>>`，所以可以省略。

`<$json-editor-form filter="[all[current]get[schema]]" />`

在[[ExampleSchemaRendering]]中试用。

!!! 渲染一个表单来控制其他的条目

我们可以使用这个微件来控制[[ExampleSchemaRendering]]条目上的`color`字段，也可以使用它的`schema`字段。

`<$json-editor-form filter="[[ExampleSchemaRendering]get[schema]]" tiddler=ExampleSchemaRendering />`。

<$json-editor-form filter="[[ExampleSchemaRendering]get[schema]]" tiddler=ExampleSchemaRendering />

渲染效果

`<<tag ExampleSchemaRendering>>`

<<tag ExampleSchemaRendering>>
